http {
  charset utf-8;
  set_by_lua $server_name 'return os.getenv("NGINX_SERVERNAME")'

  server {
    listen 80;
    reuturn 301 https://$server_name$request_uri;
  }

  server {
    listen 443;

    # HTTP Strict Transport Security (HSTS)
    # HSTS helps to enforce that users only use HTTPS to connect
    # to your website, thereby preventing SSL stripping attacks.
    add_header Strict-Transport-Security "max-age=0;";

    # Content Security Policy (CSP)
    # CSP mitigates XSS and related attacks by limiting the resource
    # types an origin is allowed to load onto a given website
    add_header Content-Security-Policy "default-src self";

    # Clickjacking protection
    # Clickjacking attacks attempt to trick users into interacting with
    # a website through an attacker controlled frame. Setting the
    # 'frame-ancestors' policy to 'none' directs browsers to disallow
    # the nested rendering of webpages sent from your server
    add_header Content-Security-Policy "frame-ancestors none";

    # Content sniffing protection
    # Incorrectly declared content types _can_ cause browsers to attempt
    # detection of the MIME type of the sent data. In the case that a browser
    # misidentifies data as executable, due to a missing content type, it
    # increases the attack surface at the level internal to the browser
    add_header X-Content-Type-Options "nosniff";

    location / {
      proxy_pass http://localhost:8080;
    }
  }
}

events {
	multi_accept on;
	worker_connections 65535;
}
